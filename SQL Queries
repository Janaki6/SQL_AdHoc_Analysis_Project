SQL Queries:

/* 1. Provide the list of markets in which customer "Atliq Exclusive" 
operates its business in the APAC region. */

SELECT distinct(market) FROM dim_customer where region = "APAC" and customer = "Atliq Exclusive";

------------------------------------------------------------------------------------------------------------

/* 2. What is the percentage of unique product increase in 2021 vs. 2020? The final output
 contains these fields, unique_products_2020 unique_products_2021 percentage_chg  */
 
 WITH unique_products AS (
    SELECT
        (SELECT COUNT(DISTINCT product_code) FROM  fact_gross_price WHERE fiscal_year = 2020) AS unique_products_2020,
        (SELECT COUNT(DISTINCT product_code) FROM fact_gross_price WHERE fiscal_year = 2021) AS unique_products_2021)
SELECT
    unique_products_2020,
    unique_products_2021,
    concat (ROUND(((unique_products_2021 - unique_products_2020) / unique_products_2020) * 100, 2), " %") AS percentage_chg
FROM
    unique_products;

---------------------------------------------------------------------------------------------------------------   
    
/*3. Provide a report with all the unique product counts for each segment and sort them in descending order 
of product counts. The final output contains 2 fields, segment product_count*/
    
SELECT segment, count(DISTINCT(product_code)) as product_count FROM dim_product group by segment order By product_count desc;
    
--------------------------------------------------------------------------------------------------------
/* 4. Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? 
The final output contains these fields, segment product_count_2020 product_count_2021 difference */
    
with cte1 as (
select p.segment, count(DISTINCT(f.product_code)) as product_count_2020, f.fiscal_year from fact_gross_price f,
dim_product p where f.product_code = p.product_code 
group by f.fiscal_year, p.segment having f.fiscal_year = 2020 ),
   
cte2 as (select p.segment, count(DISTINCT(f.product_code)) as product_count_2021, f.fiscal_year from fact_gross_price f, 
dim_product p where f.product_code = p.product_code 
group by f.fiscal_year, p.segment having f.fiscal_year = 2021 )
    
select cte1.segment , product_count_2020, product_count_2021 , (product_count_2021 - product_count_2020) 
as difference  from cte1 , cte2 where cte1.segment = cte2.segment order by difference desc;
    
----------------------------------------------------------------------------------------------------
/*5. Get the products that have the highest and lowest manufacturing costs. The final output should 
contain these fields, product_code product manufacturing_cost codebasics.io*/
    
select p.product_code, p.product, concat("$ ",round(f.manufacturing_cost,2)) as manufacturing_cost from fact_manufacturing_cost f join dim_product p
using (product_code) where manufacturing_cost in (
(select max(manufacturing_cost) from fact_manufacturing_cost),
(select min(manufacturing_cost) from fact_manufacturing_cost)
) order by manufacturing_cost desc;

------------------------------------------------------------------------------------------------------------------

/* 6. Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct
 for the fiscal year 2021 and in the Indian market. The final output contains these fields, 
 customer_code customer average_discount_percentage */
 
 select f.customer_code, c.customer, concat(round(avg(f.pre_invoice_discount_pct)*100,2), "%") as average_discount_percentage 
 from fact_pre_invoice_deductions f join dim_customer c 
 using(customer_code)
 where f.fiscal_year = 2021 and c.market = "India"
 group by c.customer_code, c.customer
 order by 
 avg(pre_invoice_discount_pct) desc limit 5 ;
 
 ------------------------------------------------------------------------------------------------------------
 /*7. Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. 
 This analysis helps to get an idea of low and high-performing months and take strategic decisions. 
 The final report contains these columns: Month Year Gross sales Amount */
 
 select concat (MONTHNAME(date), "(", year(date), ")") as month, year(date) as calendar_year, 
 round(sum(gross_price * sold_quantity)/1000000,2) as Gross_sales_amount_mln 
 from  
 fact_gross_price gp join fact_sales_monthly fs
 on 
 gp.product_code = fs.product_code
 join dim_customer dc on 
 dc.customer_code = fs.customer_code
 where customer = "Atliq Exclusive" group by month, fs.fiscal_year order by fs.fiscal_year;
 
-----------------------------------------------------------------------------------------------------------------

 /*8. In which quarter of 2020, got the maximum total_sold_quantity? The final output contains 
 these fields sorted by the total_sold_quantity, Quarter total_sold_quantity */

 SELECT 
 case
 when MONTH(date) IN(9,10,11) then "Q1"
 when MONTH(date) IN(12,1,2) then "Q2"
 when MONTH(date) IN(3,4,5) then "Q3"
 else "Q4"
 end as fiscal_quarter, 
 sum(sold_quantity)/1000000 as total_sold_quantity_mln
 from fact_sales_monthly 
 where fiscal_year = 2020
 group by quarter 
 order by total_sold_quantity_mln desc;
 
---------------------------------------------------------------------------------------------------------------------

 /*9. Which channel helped to bring more gross sales in the fiscal year 2021 and 
 the percentage of contribution? The final output contains these fields, channel gross_sales_mln percentage */
with output as (
SELECT dc.channel, round(sum((gp.gross_price * fs.sold_quantity)/1000000),2) as gross_sales_mln
FROM fact_gross_price gp join fact_sales_monthly fs on
gp.product_code = fs.product_code
join dim_customer dc on
fs.customer_code = dc.customer_code
where fs.fiscal_year = 2021
group by channel)

select channel, gross_sales_mln as gross_sales_mln,  
concat(round(gross_sales_mln *100 / sum(gross_sales_mln) over(),2),"%") as percentage
from output order by percentage desc; 

---------------------------------------------------------------------------------------------------------------------

/*10. Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? 
The final output contains these fields, division product_code codebasics.io product total_sold_quantity rank_order*/

with cte1 as (
SELECT division, pp.product_code , product, sum(sold_quantity) as total_sold_quantity
FROM dim_product pp join fact_sales_monthly fs on
 pp.product_code = fs.product_code where
 fiscal_year = 2021 group by fs.product_code order by total_sold_quantity desc),
 cte2 as 
 (
	select *,
			rank() over(partition by division order by total_sold_quantity desc) as rank_order
			from cte1

 )
 select * from  cte2 where rank_order<=3;
 
